*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="currentscale.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmcurrentscale AS baseform OF "baselibrary.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblSysMetric" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInitialScale" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWindowScale" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: declareapis
		*m: dpichanged
		*m: dpichangedevent
		*m: registerwatchfordpichange
		*m: updatedisplay
		*p: dpiatinitialization
		*p: firstactivate
		*p: noldproc
	*</DefinedPropArrayMethod>

	Caption = "Current Scale"
	Dockable = 1
	DoCreate = .T.
	dpiatinitialization = 0
	firstactivate = .T.
	Height = 100
	Left = 0
	Name = "frmCurrentScale"
	noldproc = 0
	Top = 0
	Width = 422

	ADD OBJECT 'lblInitialScale' AS baselabel WITH ;
		AutoSize = .F., ;
		Height = 19, ;
		Left = 12, ;
		Name = "lblInitialScale", ;
		Top = 36, ;
		Width = 396
		*< END OBJECT: ClassLib="baselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSysMetric' AS baselabel WITH ;
		AutoSize = .F., ;
		Left = 12, ;
		Name = "lblSysMetric", ;
		Top = 12, ;
		Width = 396
		*< END OBJECT: ClassLib="baselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblWindowScale' AS baselabel WITH ;
		AutoSize = .F., ;
		Left = 12, ;
		Name = "lblWindowScale", ;
		Top = 60, ;
		Width = 396
		*< END OBJECT: ClassLib="baselibrary.vcx" BaseClass="label" />
	
	PROCEDURE Activate
		IF ThisForm.FirstActivate
			ThisForm.FirstActivate = .F.
			ThisForm.UpdateDisplay()
		ENDIF 
	ENDPROC

	PROCEDURE declareapis
		DECLARE integer GetProcessDpiAwareness IN Shcore.dll Integer, Integer @
		DECLARE integer GetDpiForWindow IN WIN32API integer 
		Thisform.DpiAtInitialization = GetDpiForWindow(_Screen.HWnd)/96
		
		DECLARE RtlMoveMemory IN kernel32 As MemToStr;
			STRING @dst, INTEGER src, INTEGER nLength
		
		DECLARE integer GetWindowLong IN WIN32API ;
			integer hWnd, ;
			integer nIndex
		DECLARE integer CallWindowProc IN WIN32API ;
			integer lpPrevWndFunc, ;
			integer hWnd,integer Msg,;
			integer wParam,;
			integer lParam
		
		LOCAL GWL_WNDPROC
		GWL_WNDPROC = -4
		THIS.addproperty("nOldProc", GetWindowLong(_VFP.HWnd, GWL_WNDPROC))
		
	ENDPROC

	PROCEDURE dpichanged
		Thisform.UpdateDisplay()
		?PROGRAM(PROGRAM(-1))
		
	ENDPROC

	PROCEDURE dpichangedevent
		Lparameters HWnd As Integer, Msg As Integer, wParam As Integer, Lparam As Integer
		Thisform.DpiChanged()
		
		Local nBufSize, cBuffer, nLeft, nTop, nWidth, nHeight
		nBufSize = 16
		cBuffer = Replicate(Chr(0), nBufSize)
		MemToStr(@cBuffer, m.lParam, nBufSize)
		
		nLeft = buf2dword(Substr(cBuffer, 1, 4))
		nTop = buf2dword(Substr(cBuffer,5, 4))
		nWidth = buf2dword(Substr(cBuffer, 9, 4)) - m.nLeft
		nHeight = buf2dword(Substr(cBuffer, 13, 4)) - m.nTop
		
		_vfp.Left = m.nLeft
		_vfp.Top = m.nTop
		_vfp.Width = m.nWidth
		_vfp.Height = m.nHeight
		
		Local lResult
		lResult=CallWindowProc(This.nOldProc,HWnd,Msg,wParam,Lparam)
		Return lResult
		
	ENDPROC

	PROCEDURE Load
		IF NOT DODEFAULT()
			RETURN .F.
		ENDIF 
		Thisform.DeclareApis()
		*ThisForm.Registerwatchfordpichange()
		BINDEVENT(_Screen.DpiWatch, "DpiChanged", This, "UpdateDisplay", 1)
	ENDPROC

	PROCEDURE registerwatchfordpichange
		LOCAL WM_DPICHANGED
		WM_DPICHANGED = 0x02E0
		BINDEVENT(ThisForm.HWnd, WM_DPICHANGED, this, "DpiChangedEvent", 4)
	ENDPROC

	PROCEDURE updatedisplay
		ThisForm.lblSysMetric.Caption = "SysMetric values for primary monitor: " ;
			+ TRANSFORM(SYSMETRIC(1)) + " x " + TRANSFORM(SYSMETRIC(2))
		ThisForm.lblInitialScale.Caption = "Initial Scale: " + TRANSFORM(Thisform.DpiAtInitialization)
		ThisForm.lblWindowScale.Caption = "Current Scale for Window: ";
			+ TRANSFORM(GetDpiForWindow(_Screen.HWnd)/96)
		ThisForm.Dock(-1)
		ThisForm.Refresh()
		ThisForm.Height = ThisForm.lblWindowScale.Top + ThisForm.lblWindowScale.Height + (6 * _Screen.DpiFactor)
		ThisForm.Dock(0)
		
	ENDPROC

ENDDEFINE
